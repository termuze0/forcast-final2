const mongoose = require("mongoose");
const connectDB = require("./config/db");
require("dotenv").config();

const products = [
  {
    _id: new mongoose.Types.ObjectId("507f1f77bcf86cd799439011"),
    name: "Injera",
    category: "Groceries",
    price: 50,
    stockQuantity: 100,
    lowStockThreshold: 10,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("507f1f77bcf86cd799439012"),
    name: "Teff Flour",
    category: "Groceries",
    price: 120,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("507f1f77bcf86cd799439013"),
    name: "Berbere Spice",
    category: "Groceries",
    price: 30,
    stockQuantity: 50,
    lowStockThreshold: 5,
    reorderQuantity: 20,
  },
  {
    _id: new mongoose.Types.ObjectId("507f1f77bcf86cd799439014"),
    name: "Coffee",
    category: "Groceries",
    price: 200,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123451"),
    name: "Shiro Powder",
    category: "Groceries",
    price: 80,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123452"),
    name: "Mitmita Spice",
    category: "Groceries",
    price: 35,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123453"),
    name: "Doro Wat Sauce",
    category: "Groceries",
    price: 90,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123454"),
    name: "Lentil Flour",
    category: "Groceries",
    price: 110,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123455"),
    name: "Barley Grain",
    category: "Groceries",
    price: 60,
    stockQuantity: 150,
    lowStockThreshold: 25,
    reorderQuantity: 75,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123456"),
    name: "Niter Kibbeh",
    category: "Groceries",
    price: 150,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123457"),
    name: "Awaze Dip",
    category: "Groceries",
    price: 45,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123458"),
    name: "Chickpea Flour",
    category: "Groceries",
    price: 100,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123459"),
    name: "Sorghum Grain",
    category: "Groceries",
    price: 70,
    stockQuantity: 130,
    lowStockThreshold: 25,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012345a"),
    name: "Ethiopian Honey",
    category: "Groceries",
    price: 250,
    stockQuantity: 50,
    lowStockThreshold: 10,
    reorderQuantity: 25,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012345b"),
    name: "Kolo Snack",
    category: "Groceries",
    price: 40,
    stockQuantity: 200,
    lowStockThreshold: 30,
    reorderQuantity: 100,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012345c"),
    name: "Bulla Powder",
    category: "Groceries",
    price: 85,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012345d"),
    name: "Tef Bread Mix",
    category: "Groceries",
    price: 130,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012345e"),
    name: "Red Lentils",
    category: "Groceries",
    price: 90,
    stockQuantity: 140,
    lowStockThreshold: 20,
    reorderQuantity: 70,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012345f"),
    name: "Fava Beans",
    category: "Groceries",
    price: 95,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123460"),
    name: "Tella Beer Kit",
    category: "Groceries",
    price: 180,
    stockQuantity: 40,
    lowStockThreshold: 10,
    reorderQuantity: 20,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123461"),
    name: "Gomen Kit",
    category: "Groceries",
    price: 65,
    stockQuantity: 100,
    lowStockThreshold: 15,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123462"),
    name: "Ethiopian Butter",
    category: "Groceries",
    price: 140,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123463"),
    name: "Millet Grain",
    category: "Groceries",
    price: 75,
    stockQuantity: 130,
    lowStockThreshold: 25,
    reorderQuantity: 65,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123464"),
    name: "Spiced Tea",
    category: "Groceries",
    price: 55,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123465"),
    name: "Amarula Fruit",
    category: "Groceries",
    price: 200,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123466"),
    name: "Split Peas",
    category: "Groceries",
    price: 85,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123467"),
    name: "Ethiopian Mustard",
    category: "Groceries",
    price: 60,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123468"),
    name: "Sesame Seeds",
    category: "Groceries",
    price: 90,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123469"),
    name: "Tibs Seasoning",
    category: "Groceries",
    price: 50,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012346a"),
    name: "Wheat Flour",
    category: "Groceries",
    price: 100,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012346b"),
    name: "Enset Flour",
    category: "Groceries",
    price: 110,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012346c"),
    name: "Ethiopian Salt",
    category: "Groceries",
    price: 25,
    stockQuantity: 150,
    lowStockThreshold: 25,
    reorderQuantity: 75,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012346d"),
    name: "Fenugreek Seeds",
    category: "Groceries",
    price: 40,
    stockQuantity: 80,
    lowStockThreshold: 10,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012346e"),
    name: "Black Pepper",
    category: "Groceries",
    price: 50,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012346f"),
    name: "Cardamom Pods",
    category: "Groceries",
    price: 70,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123470"),
    name: "Cumin Seeds",
    category: "Groceries",
    price: 45,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123471"),
    name: "Turmeric Powder",
    category: "Groceries",
    price: 35,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123472"),
    name: "Ginger Powder",
    category: "Groceries",
    price: 40,
    stockQuantity: 80,
    lowStockThreshold: 10,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123473"),
    name: "Cloves Whole",
    category: "Groceries",
    price: 60,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123474"),
    name: "Coriander Seeds",
    category: "Groceries",
    price: 45,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123475"),
    name: "Niger Seed Oil",
    category: "Groceries",
    price: 120,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123476"),
    name: "Ethiopian Peas",
    category: "Groceries",
    price: 90,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123477"),
    name: "Chickpea Snack",
    category: "Groceries",
    price: 50,
    stockQuantity: 150,
    lowStockThreshold: 25,
    reorderQuantity: 75,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123478"),
    name: "Pumpkin Seeds",
    category: "Groceries",
    price: 80,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123479"),
    name: "Sunflower Seeds",
    category: "Groceries",
    price: 70,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012347a"),
    name: "Flax Seeds",
    category: "Groceries",
    price: 65,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012347b"),
    name: "Ethiopian Sugar",
    category: "Groceries",
    price: 90,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012347c"),
    name: "Safflower Oil",
    category: "Groceries",
    price: 130,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012347d"),
    name: "Ethiopian Rice",
    category: "Groceries",
    price: 100,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012347e"),
    name: "Tej Honey Wine",
    category: "Groceries",
    price: 200,
    stockQuantity: 50,
    lowStockThreshold: 10,
    reorderQuantity: 25,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012347f"),
    name: "Ethiopian Pasta",
    category: "Groceries",
    price: 80,
    stockQuantity: 100,
    lowStockThreshold: 15,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123480"),
    name: "Corn Flour",
    category: "Groceries",
    price: 90,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123481"),
    name: "Ethiopian Oats",
    category: "Groceries",
    price: 70,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123482"),
    name: "Dried Mango",
    category: "Groceries",
    price: 150,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123483"),
    name: "Dried Papaya",
    category: "Groceries",
    price: 140,
    stockQuantity: 50,
    lowStockThreshold: 10,
    reorderQuantity: 25,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123484"),
    name: "Dried Banana",
    category: "Groceries",
    price: 120,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123485"),
    name: "Ethiopian Yam",
    category: "Groceries",
    price: 90,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123486"),
    name: "Sweet Potato",
    category: "Groceries",
    price: 80,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123487"),
    name: "Cassava Flour",
    category: "Groceries",
    price: 100,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123488"),
    name: "Ethiopian Garlic",
    category: "Groceries",
    price: 50,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123489"),
    name: "Ethiopian Onion",
    category: "Groceries",
    price: 45,
    stockQuantity: 130,
    lowStockThreshold: 25,
    reorderQuantity: 65,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012348a"),
    name: "Tomato Paste",
    category: "Groceries",
    price: 60,
    stockQuantity: 100,
    lowStockThreshold: 15,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012348b"),
    name: "Ethiopian Chili",
    category: "Groceries",
    price: 55,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012348c"),
    name: "Green Lentils",
    category: "Groceries",
    price: 95,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012348d"),
    name: "Black Lentils",
    category: "Groceries",
    price: 100,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012348e"),
    name: "Ethiopian Barley",
    category: "Groceries",
    price: 65,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012348f"),
    name: "Dried Figs",
    category: "Groceries",
    price: 160,
    stockQuantity: 50,
    lowStockThreshold: 10,
    reorderQuantity: 25,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123490"),
    name: "Dried Dates",
    category: "Groceries",
    price: 140,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123491"),
    name: "Ethiopian Raisins",
    category: "Groceries",
    price: 120,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123492"),
    name: "Alicha Seasoning",
    category: "Groceries",
    price: 50,
    stockQuantity: 80,
    lowStockThreshold: 10,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123493"),
    name: "Ethiopian Couscous",
    category: "Groceries",
    price: 90,
    stockQuantity: 100,
    lowStockThreshold: 15,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123494"),
    name: "Teff Pasta",
    category: "Groceries",
    price: 110,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123495"),
    name: "Ethiopian Quinoa",
    category: "Groceries",
    price: 130,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123496"),
    name: "Dried Apricots",
    category: "Groceries",
    price: 150,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123497"),
    name: "Ethiopian Millet",
    category: "Groceries",
    price: 80,
    stockQuantity: 100,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123498"),
    name: "Sorghum Flour",
    category: "Groceries",
    price: 100,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f67890123499"),
    name: "Ethiopian Vinegar",
    category: "Groceries",
    price: 60,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012349a"),
    name: "Ethiopian Molasses",
    category: "Groceries",
    price: 90,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012349b"),
    name: "Dried Pineapple",
    category: "Groceries",
    price: 140,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012349c"),
    name: "Ethiopian Carrots",
    category: "Groceries",
    price: 50,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012349d"),
    name: "Ethiopian Beets",
    category: "Groceries",
    price: 55,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012349e"),
    name: "Ethiopian Spinach",
    category: "Groceries",
    price: 45,
    stockQuantity: 130,
    lowStockThreshold: 25,
    reorderQuantity: 65,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f6789012349f"),
    name: "Ethiopian Kale",
    category: "Groceries",
    price: 50,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a0"),
    name: "Ethiopian Cabbage",
    category: "Groceries",
    price: 40,
    stockQuantity: 140,
    lowStockThreshold: 25,
    reorderQuantity: 70,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a1"),
    name: "Ethiopian Okra",
    category: "Groceries",
    price: 60,
    stockQuantity: 100,
    lowStockThreshold: 15,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a2"),
    name: "Ethiopian Zucchini",
    category: "Groceries",
    price: 55,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a3"),
    name: "Ethiopian Eggplant",
    category: "Groceries",
    price: 65,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a4"),
    name: "Ethiopian Tomatoes",
    category: "Groceries",
    price: 50,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a5"),
    name: "Ethiopian Potatoes",
    category: "Groceries",
    price: 45,
    stockQuantity: 130,
    lowStockThreshold: 25,
    reorderQuantity: 65,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a6"),
    name: "Ethiopian Avocado",
    category: "Groceries",
    price: 80,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a7"),
    name: "Ethiopian Mango",
    category: "Groceries",
    price: 90,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a8"),
    name: "Ethiopian Papaya",
    category: "Groceries",
    price: 85,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234a9"),
    name: "Ethiopian Banana",
    category: "Groceries",
    price: 60,
    stockQuantity: 100,
    lowStockThreshold: 15,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234aa"),
    name: "Ethiopian Orange",
    category: "Groceries",
    price: 70,
    stockQuantity: 90,
    lowStockThreshold: 15,
    reorderQuantity: 45,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234ab"),
    name: "Ethiopian Lemon",
    category: "Groceries",
    price: 50,
    stockQuantity: 110,
    lowStockThreshold: 20,
    reorderQuantity: 50,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234ac"),
    name: "Ethiopian Lime",
    category: "Groceries",
    price: 45,
    stockQuantity: 120,
    lowStockThreshold: 20,
    reorderQuantity: 60,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234ad"),
    name: "Ethiopian Pineapple",
    category: "Groceries",
    price: 90,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234ae"),
    name: "Ethiopian Watermelon",
    category: "Groceries",
    price: 100,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234af"),
    name: "Ethiopian Guava",
    category: "Groceries",
    price: 80,
    stockQuantity: 80,
    lowStockThreshold: 15,
    reorderQuantity: 40,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234b0"),
    name: "Ethiopian Passion Fruit",
    category: "Groceries",
    price: 95,
    stockQuantity: 70,
    lowStockThreshold: 10,
    reorderQuantity: 35,
  },
  {
    _id: new mongoose.Types.ObjectId("66a1b2c3d4e5f678901234b1"),
    name: "Ethiopian Pomegranate",
    category: "Groceries",
    price: 110,
    stockQuantity: 60,
    lowStockThreshold: 10,
    reorderQuantity: 30,
  },
];

async function insertProducts() {
  try {
    await connectDB();
    const Product = mongoose.model(
      "Product",
      new mongoose.Schema({
        name: String,
        category: String,
        price: Number,
        stockQuantity: Number,
        lowStockThreshold: Number,
        reorderQuantity: Number,
      })
    );
    await Product.deleteMany({});
    await Product.insertMany(products);
    console.log("Products inserted successfully");
  } catch (error) {
    console.error("Error inserting products:", error);
  } finally {
    mongoose.connection.close();
  }
}

insertProducts();